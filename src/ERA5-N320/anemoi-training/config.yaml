defaults:
  - data: zarr
  - dataloader: native_grid
  - diagnostics: evaluation
  - datamodule: ens
  - hardware: slurm
  - graph: n320
  - model: graphtransformer_ens
  - training: ensemble
  - _self_
    #  - override hydra/hydra_logging: disabled  
    #  - override hydra/job_logging: disabled 
    #  - override diagnostics/plot: simpler


hydra:  
  output_subdir: null  
  run:  
    dir: .
  searchpath:
    - file:///leonardo_work/DestE_330_25/enordhag/anemoi-core/training/src/anemoi/training/config/

config_validation: True

data:
  frequency: 6h
  resolution: N320
  forcing:
  - "cos_latitude"
  - "cos_longitude"
  - "sin_latitude"
  - "sin_longitude"
  - "cos_julian_day"
  - "cos_local_time"
  - "sin_julian_day"
  - "sin_local_time"
  - "insolation"
  - "lsm"
  - "z"

  diagnostic:
  - "tp"
  - "ssrd"
  - "strd"

  normalizer:
    max: 
    - "z"
    none:
    - "cos_latitude"
    - "cos_longitude"
    - "sin_latitude"
    - "sin_longitude"
    - "cos_julian_day"
    - "cos_local_time"
    - "sin_julian_day"
    - "sin_local_time"
    - "insolation"
    - "lsm"
    - "lcc"
    - "mcc"
    - "hcc"
    - "tcc"

dataloader:
  dataset: 
    join:
      - dataset: ${hardware.paths.data}/${hardware.files.dataset_atm}
      - dataset: ${hardware.paths.data}/${hardware.files.dataset_land}
        select: ["lcc", "mcc", "hcc", "tcc", "strd", "ssrd"]
    adjust: ["start", "end"]
    
  #model_run_info: #Add for non-analysis training
  # start: 2020-02-05T12:00:00
  # length: 18 #in number of dates (* frequency for actual time)

  num_workers:
    training: 1
    validation: 1
    test: 1

  limit_batches:
    training: null #50
    validation: null #20
    test: null

  prefetch_factor: 2
  validation_rollout: 1

  batch_size:
    training: 1
    validation: 1
    test: 1

  training:
    start: 1979-01-01
    end: 2021-12-31
    select: ['10u', '10v', '2d', '2t', 'cos_julian_day', 'cos_latitude', 'cos_local_time', 'cos_longitude', 'hcc', 'insolation', 'lcc', 'lsm', 'mcc', 'msl', 'q_100', 'q_1000', 'q_150', 'q_200', 'q_250', 'q_300', 'q_400', 'q_50', 'q_500', 'q_700', 'q_850', 'q_925', 'sin_julian_day', 'sin_latitude', 'sin_local_time', 'sin_longitude', 'skt', 'sp', 'ssrd', 'strd', 't_100', 't_1000', 't_150', 't_200', 't_250', 't_300', 't_400', 't_50', 't_500', 't_700', 't_850', 't_925', 'tcc', 'tcw', 'tp', 'u_100', 'u_1000', 'u_150', 'u_200', 'u_250', 'u_300', 'u_400', 'u_50', 'u_500', 'u_700', 'u_850', 'u_925', 'v_100', 'v_1000', 'v_150', 'v_200', 'v_250', 'v_300', 'v_400', 'v_50', 'v_500', 'v_700', 'v_850', 'v_925', 'w_100', 'w_1000', 'w_150', 'w_200', 'w_250', 'w_300', 'w_400', 'w_50', 'w_500', 'w_700', 'w_850', 'w_925', 'z', 'z_100', 'z_1000', 'z_150', 'z_200', 'z_250', 'z_300', 'z_400', 'z_50', 'z_500', 'z_700', 'z_850', 'z_925']
    reorder: sort
    #statistics: ${hardware.paths.data}/aifs-ea-an-oper-0001-mars-n320-1979-2022-6h-v6.zarr

  validation:
    start: 2022-01-01
    end: 2022-12-31
    select: ${dataloader.training.select}
    reorder: sort
    #statistics: ${dataloader.training.statistics}

  test:
    start: 2022-01-01
    end: 2022-12-31
    select: ${dataloader.training.select}
    reorder: sort
    #statistics: ${dataloader.training.statistics}

diagnostics:
  plot:
    callbacks: []
  log:
    mlflow:
      enabled: False
      offline: True
      authentication: True
      tracking_uri: https://mlflow.ecmwf.int
      experiment_name: 'metno'
      run_name: ens_test
      system: True
    interval: 10
    wandb:
      entity: null
  
  checkpoint:
    every_n_minutes:
      save_frequency: 30
      num_models_saved: 1
    every_n_epochs:
      save_frequency: 1
      num_models_saved: 1
 
hardware:
  paths:
    data: /leonardo_work/DestE_340_25/ai-ml/datasets/
    output: /leonardo_work/DestE_330_25/anemoi/experiments/ens/
    graph: /leonardo_work/DestE_330_25/anemoi/graphs/
  files:
    dataset_atm: aifs-ea-an-oper-0001-mars-n320-1979-2022-6h-v6.zarr
    dataset_land: aifs-ea-an-oper-0001-mars-n320-1979-2023-6h-v1-land.zarr
    graph: n320_7.pt
  num_gpus_per_model: 4
  num_gpus_per_ensemble: 8

graph:
  overwrite: False
  
  # edges:
  # - source_name: ${graph.data}
  #   target_name: ${graph.hiddenTrue
  #   edge_builders:
  #   - target: anemoi.graphs.edges.KNNEdges # options: KNNEdges, CutOffEdges
  #     num_nearest_neighbours: 12 # only for cutoff method
  #     source_mask_attr_name: null
  #     target_mask_attr_name: null
  #   attributes: ${graph.attributes.edges}

  # attributes:
  #   edges:
  #     edge_length:
  #       target: anemoi.graphs.edges.attributes.EdgeLength
  #       norm: unit-max

model:
  num_channels: 1024
  trainable_parameters:
    data: 0
    hidden: 0
    data2hidden: 0
    hidden2data: 0
    hidden2hidden: 0
#  model:
#    target: anemoi.models.models.forecaster.AnemoiModelEncProcDec
  # latent_skip: False
  # grid_skip: 0

  bounding:
    - _target_: anemoi.models.layers.bounding.ReluBounding #[0, infinity)
      variables:
        - tp
    - _target_: anemoi.models.layers.bounding.HardtanhBounding #[min_val, max_val]
      variables:
        - tcc
        - hcc
        - mcc
        - lcc
      min_val: 0
      max_val: 1

training:
  #fork_run_id: 315b7030-da27-4665-9517-0b78f9ba199f
  run_id: 87741c69-ff4d-45d4-af86-a69dbdad4765
  max_epochs: null
  ensemble_size_per_device: 1
  max_steps: 30000
  load_weights_only: False #True
  transfer_learning: False #True
  lr:
    rate: 1.0e-4
    min: 6.0e-6
    warmup: 1000
  training_loss:
    alpha: 0.95
  #scalers:
  #  stdev_tendency:
  #    _target_: anemoi.training.losses.scalers.NoTendencyScaler
  #  var_tendency:
  #    _target_: anemoi.training.losses.scalers.NoTendencyScaler

  # explicit_times:
  #   input: [0,6]
  #   target: [1,2,3,4,5]

  # target_forcing: #forcing parameters for the target time to include as input
  #   data: #[] #of which come from the dataset
  #     - "insolation"
  #     #- "sin_latitude"
  #   time_fraction: True

  # scalers:
  #   stdev_tendency:
  #     target: anemoi.training.losses.scalers.NoTendencyScaler

  #   var_tendency:
  #     target: anemoi.training.losses.scalers.NoTendencyScaler
